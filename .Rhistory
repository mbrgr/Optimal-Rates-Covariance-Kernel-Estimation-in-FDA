select(-(1:3))
###### January ######
# Figure 9a: temp curves in January
N |>  filter(TAG %in% c(1, 15, 29),
MONAT == 1) |>
ggplot() +
geom_line(aes(x = UHRZEIT, y = TT_10, group = JAHR*TAG, colour = JAHR), alpha = .7) +
labs(y = "Temp. in C째", x = "hours", title = "Temp. in January", colour = "year") +
theme(text = element_text(size = 18))
g_hat1 = cov_estimation(1)
var_hat1 = diag(g_hat1)
var_est1 = tibble(var_hat = var_hat1, x = eval_time)
var_est1 |>
ggplot(aes(x = x, y = sqrt(var_hat1))) +
geom_line(size = .6) +
lims(y = c(0.2, 5)) +
labs(y = NULL, x = "hour", title = "Std. deviation of temperatur in January") +
theme(text = element_text(size = 18))
cov_est_df1 = data.frame(x = W$x.eval, y = W$x.eval, z = g_hat1)
cs2 = list(c(0, 1), c("lightblue", "darkred"))
# Plot of Covariance estimation: Not in Paper
plot_ly(cov_est_df1, x = ~x, y = ~y, z = ~g_hat1, size = .4) |>
add_surface(colorscale = cs2, alpha = .3) |>
layout(scene = list(xaxis = list(title = ""),
yaxis = list(title = ""),
zaxis = list(title = "")))
eval_time
eval_time = N$UHRZEIT[3:146][seq(2, 144, 2)]
eval_time
N
load("data/weather_data_raw.RData")
N$DATUM = str_split_i(N$MESS_DATUM, pattern = " ", i = 1) |> ymd()
tage = c(1, 4, 8, 12, 15, 18, 22, 25, 29)
N_full = N[-(1:6),]
N = N[-(1:6), ] %>%
filter(TAG %in% tage)
N
eval_time = N$UHRZEIT[1:146][seq(2, 144, 2)]
eval_time
###### January ######
# Figure 9a: temp curves in January
N |>  filter(TAG %in% c(1, 15, 29),
MONAT == 1) |>
ggplot() +
geom_line(aes(x = UHRZEIT, y = TT_10, group = JAHR*TAG, colour = JAHR), alpha = .7) +
labs(y = "Temp. in C째", x = "hours", title = "Temp. in January", colour = "year") +
theme(text = element_text(size = 18))
g_hat1 = cov_estimation(1)
var_hat1 = diag(g_hat1)
var_est1 = tibble(var_hat = var_hat1, x = eval_time)
var_est1 |>
ggplot(aes(x = x, y = sqrt(var_hat1))) +
geom_line(size = .6) +
lims(y = c(0.2, 5)) +
labs(y = NULL, x = "hour", title = "Std. deviation of temperatur in January") +
theme(text = element_text(size = 18))
cov_est_df1 = data.frame(x = W$x.eval, y = W$x.eval, z = g_hat1)
cs2 = list(c(0, 1), c("lightblue", "darkred"))
# Plot of Covariance estimation: Not in Paper
plot_ly(cov_est_df1, x = ~x, y = ~y, z = ~g_hat1, size = .4) |>
add_surface(colorscale = cs2, alpha = .3) |>
layout(scene = list(xaxis = list(title = ""),
yaxis = list(title = ""),
zaxis = list(title = "")))
temp = matrix(diag(g_hat1), p.eval, p.eval)
cor_hat1 = g_hat1 / sqrt( temp * t(temp) )
# Figure 11a
plot_ly(cov_est_df1, x = ~x*24, y = ~y*24, z = ~cor_hat1, size = .4) |>
add_surface(colorscale = cs2, alpha = .3) |>
layout(scene = list(xaxis = list(title = ""),
yaxis = list(title = ""),
zaxis = list(title = "")))
g_hat1 = cov_estimation(1)
var_hat1 = diag(g_hat1)
var_est1 = tibble(var_hat = var_hat1, x = eval_time)
var_est1 |>
ggplot(aes(x = x, y = sqrt(var_hat1))) +
geom_line(size = .6) +
lims(y = c(0.2, 5)) +
labs(y = NULL, x = "hour", title = "Std. deviation of temperatur in January") +
theme(text = element_text(size = 18))
cov_est_df1 = data.frame(x = W$x.eval, y = W$x.eval, z = g_hat1)
cs2 = list(c(0, 1), c("lightblue", "darkred"))
# Plot of Covariance estimation: Not in Paper
plot_ly(cov_est_df1, x = ~x, y = ~y, z = ~g_hat1, size = .4) |>
add_surface(colorscale = cs2, alpha = .3) |>
layout(scene = list(xaxis = list(title = ""),
yaxis = list(title = ""),
zaxis = list(title = "")))
temp = matrix(diag(g_hat1), p.eval, p.eval)
load("data/weather_data_raw.RData")
N$DATUM = str_split_i(N$MESS_DATUM, pattern = " ", i = 1) |> ymd()
load("data/weather_data_raw.RData")
N
N$DATUM = str_split_i(N$MESS_DATUM, pattern = " ", i = 1) |> ymd()
tage = c(1, 4, 8, 12, 15, 18, 22, 25, 29)
N_full = N[-(1:6),]
N = N %>%
filter(TAG %in% tage)
N |>
filter(TAG %in% c(1, 8, 15, 22, 29)) |>
ggplot() +
geom_line(aes(x = UHRZEIT, y = TT_10, group = JAHR*TAG, colour = JAHR), alpha = .4) +
facet_wrap(MONAT ~.)
# Figure 9b: Temp. curves in August
N |>
filter(TAG %in% c(1, 15, 29),
MONAT == 8) |>
ggplot() +
geom_line(aes(x = UHRZEIT, y = TT_10, group = JAHR*TAG, colour = JAHR), alpha = .6) +
labs(y = "Temp. in C째", x = "hours", title = "Temp. in August", colour = "year") +
theme(text = element_text(size = 18))
N_wide = N |>
filter(TAG %in% tage) |>  # No consecutive days
mutate(UHRZEIT = as.character(UHRZEIT)) |>
select(JAHR, MONAT, TAG, UHRZEIT, TT_10) |>
pivot_wider(names_from = UHRZEIT,
values_from = TT_10)
Y_all = N_full |>
mutate(UHRZEIT = as.character(UHRZEIT)) |>
select(JAHR, MONAT, TAG, UHRZEIT, TT_10) |>
pivot_wider(names_from = UHRZEIT, values_from = TT_10) |>
filter(MONAT == 4) |>
select(-(1:3))
empirical_cov_all = Y_all |>
as.data.frame() |>
observation_transformation(na.rm = T, grid.type = "full")
empirical_cov_filtered = N_wide |>
filter(MONAT == 4) |>
select(-(1:3)) |>
as.data.frame() |>
observation_transformation(na.rm = T, grid.type = "full")
df_all = tibble(empirical_cov_all, empirical_cov_filtered, observation_grid(144, comp = "full"))
# grafic not contained in paper
plot_ly(df_all, size = .4) |>
add_markers(x = ~Var1, y = ~Var2, z = ~empirical_cov_all) |>
add_markers(x = ~Var1, y = ~Var2, z = ~empirical_cov_filtered, alpha = 0.4)
#### NA Count #####
N |>  summarise(.by = c(JAHR, MONAT, TAG),
n = n(), mean = mean(TT_10)) |>
filter(n == 144) |>
summarise(.by = MONAT,
n = n()) |>
arrange(MONAT)
cov_estimation = function(month, weights = W, nw =  N_wide){
y = nw |>
filter(MONAT == month) |>
select(-(1:3))
z = y |>
as.data.frame() |> # TODO: fix this in biLocPol
observation_transformation(na.rm = T)
eval_weights(weights, z)
}
N_wide |>
filter(MONAT == 3) |>
select(-(1:3)) |> is.na() |> sum()
##### calculate weights #####
p.eval = 72
eval_time = N$UHRZEIT[1:146][seq(2, 144, 2)]
eval_time
###### January ######
# Figure 9a: temp curves in January
N |>  filter(TAG %in% c(1, 15, 29),
MONAT == 1) |>
ggplot() +
geom_line(aes(x = UHRZEIT, y = TT_10, group = JAHR*TAG, colour = JAHR), alpha = .7) +
labs(y = "Temp. in C째", x = "hours", title = "Temp. in January", colour = "year") +
theme(text = element_text(size = 18))
g_hat1 = cov_estimation(1)
var_hat1 = diag(g_hat1)
var_est1 = tibble(var_hat = var_hat1, x = eval_time)
var_est1 |>
ggplot(aes(x = x, y = sqrt(var_hat1))) +
geom_line(size = .6) +
lims(y = c(0.2, 5)) +
labs(y = NULL, x = "hour", title = "Std. deviation of temperatur in January") +
theme(text = element_text(size = 18))
cov_est_df1 = data.frame(x = W$x.eval, y = W$x.eval, z = g_hat1)
cs2 = list(c(0, 1), c("lightblue", "darkred"))
# Plot of Covariance estimation: Not in Paper
plot_ly(cov_est_df1, x = ~x, y = ~y, z = ~g_hat1, size = .4) |>
add_surface(colorscale = cs2, alpha = .3) |>
layout(scene = list(xaxis = list(title = ""),
yaxis = list(title = ""),
zaxis = list(title = "")))
temp = matrix(diag(g_hat1), p.eval, p.eval)
cor_hat1 = g_hat1 / sqrt( temp * t(temp) )
# Figure 11a
plot_ly(cov_est_df1, x = ~x*24, y = ~y*24, z = ~cor_hat1, size = .4) |>
add_surface(colorscale = cs2, alpha = .3) |>
layout(scene = list(xaxis = list(title = ""),
yaxis = list(title = ""),
zaxis = list(title = "")))
###### August ######
g_hat = cov_estimation(8)
var_hat = diag(g_hat)
var_est = tibble(var_hat, x = eval_time)
var_est |>
ggplot(aes(x = x, y = sqrt(var_hat))) +
geom_line(linewidth = .7) +
lims(y = c(0.2, 5)) +
labs(y = NULL, x = "hour", title = "Std. deviation of temperatur in August") +
theme(legend.position = "none",
text = element_text(size = 18))
cov_est_df = data.frame(x = W$x.eval, y = W$x.eval, z = g_hat)
cs2 = list(c(0, 1), c("lightblue", "darkred"))
# Plot of Covariance Kernel: Not in Paper
plot_ly(cov_est_df, x = ~x, y = ~y, z = ~g_hat, size = .4) |>
add_surface(colorscale = cs2, alpha = .3) |>
layout(scene = list(xaxis = list(title = ""),
yaxis = list(title = ""),
zaxis = list(title = "")))
temp = matrix(diag(g_hat), p.eval, p.eval)
cor_hat = g_hat / sqrt( temp * t(temp) )
# Figure 11b: Plot of Correlation in August.
plot_ly(cov_est_df, x = ~x*24, y = ~y*24, z = ~cor_hat, size = .4) |>
add_surface(colorscale = cs2, alpha = .3) |>
layout(scene = list(xaxis = list(title = ""),
yaxis = list(title = ""),
zaxis = list(title = "")))
sd_tibble_m1h02 = sapply(1:12,
function(m){
est = cov_estimation(m) |> diag() |> sqrt()
}) |>
as_tibble()
sd_tibble_m1h05 = sapply(1:12,
function(m){
est = cov_estimation(m, weights = Wh05) |> diag() |> sqrt()
}) |> as_tibble()
sd_tibble_m1h01 = sapply(1:12,
function(m){
est = cov_estimation(m, weights = Wh01) |> diag() |> sqrt()
}) |> as_tibble()
sd_tibble = sd_tibble_m1h01 |>
rbind(sd_tibble_m1h02, sd_tibble_m1h05) |>
mutate(time = rep(eval_time, 3),
h = gl(3, 72, labels = c("144", "288", "720"))) |>
pivot_longer(cols = 1:12,
names_to = "month",
values_to = "sd",
cols_vary = "slowest") |>
mutate(month = gl(12, 72,
labels = c("Jan", "Feb", "Mar", "Apr",
"May", "Jun", "Jul", "Aug",
"Sep", "Oct", "Nov", "Dec")) |> rep(each = 3))
sd_tibble$time  = sd_tibble$time |> as.POSIXct(format = "%H:%M")
# Figure 10: all standard deviations.
sd_tibble |>
ggplot(aes(x = time, y = sd, lty = h, col = h)) +
geom_line(linewidth = .8) +
lims(y = c(0.2, 6)) +
labs(y = NULL, x = NULL) +
theme(text = element_text(size = 18)) +
facet_wrap(.~month, nrow = 3) +
scale_linetype_manual(values = c(2,5,4), name = "h (min)") +
scale_color_manual(values = 1:3, name = "h (min)") +
scale_x_datetime(date_breaks = "8 hours", date_labels = "%H:%M")
save.image("//mathematik.uni-marburg.de/DFS/HOMES.Windows/mberger/Documents/GitHub/Optimal-Rates-Covariance-Kernel-Estimation-in-FDA/data/weather_data_with_weights.RData")
gc()
load("data/data_20240529_bw_comp.RData")
load("old_data/data_20240529_bw_comp.RData")
bw_comparison_tbl = Reduce(rbind, bw_comparison) |>
as_tibble() |>
rename(n = V1, p = V2, h = V3, sup.err = V4) |>
mutate(p = as.factor(p), n = as.factor(n))
bw_comparison_tbl |>
filter(n != 50) |>
ggplot() +
geom_line(aes(x = h, y = sup.err, col = n, linetype = p), size = .6) +
ylim(c(0, 0.65)) +
theme(text = element_text(size = 18))
load("data/bw_comp_OU.RData")
load("data/bw_comp_OU.RData")
bw_comparison_tbl = Reduce(rbind, bw_comparison) |>
as_tibble() |>
rename(n = V1, p = V2, h = V3, sup.err = V4) |>
mutate(p = as.factor(p), n = as.factor(n))
bw_comparison_tbl |>
filter(n != 50) |>
ggplot() +
geom_line(aes(x = h, y = sup.err, col = n, linetype = p), size = .6) +
ylim(c(0, 0.65)) +
theme(text = element_text(size = 18))
bw_comparison_tbl |>
filter(n == 400) |>
ggplot() +
geom_line(aes(x = h, y = sup.err, col = p, linetype = p), size = .6) +
ylim(c(0.02, 0.52)) +
theme(text = element_text(size = 18)) +
labs(title = "n = 400")
bw_comparison_tbl |>
filter(n == 100, p == 75) |>
ggplot() +
geom_line(aes(x = h, y = sup.err, linetype = p)) +
ylim(c(0, 0.9))
bw_comparison_tbl |>
filter(n == 400) |>
ggplot() +
geom_line(aes(x = h, y = sup.err, col = p, linetype = p)) +
ylim(c(0, .55))
min_h_tibble = bw_comparison_tbl |>
group_by(n, p) |>
slice_min(sup.err)
bw_comparison_tbl |>
filter(n == 400) |>
ggplot() +
geom_line(aes(x = h, y = sup.err, col = p, linetype = p)) +
ylim(c(0, .55))
bw_comparison_tbl |>
filter(n == 100) |>
ggplot( ) +
geom_line(aes(x = h, y = sup.err, col = p, linetype = p)) +
ylim(c(0.03, 0.65)) +
labs(title = "n = 100")
bw_comparison_tbl |>
filter(n == 400) |>
ggplot() +
geom_line(aes(x = h, y = sup.err, col = p, linetype = p), size = .6) +
ylim(c(0.02, 0.52)) +
theme(text = element_text(size = 18)) +
labs(title = "n = 400")
min_h_tibble = bw_comparison_tbl |>
group_by(n, p) |>
slice_min(sup.err)
bw_comparison_tbl |>
filter(n == 100) |>
ggplot( ) +
geom_line(aes(x = h, y = sup.err, col = p, linetype = p)) +
ylim(c(0.03, 0.65)) +
labs(title = "n = 100")
load("data/one_fold_cv_OU_n400.RData")
load("data/one_fold_cv_n400_OU.RData")
one_fold_tbl_n400 = tibble(h = one_fold_cv_n400 %>% unlist(), p = gl(3, 1000, labels = p.seq))
one_fold_tbl_n400 %>%
ggplot(aes(y = h, x = p, col = p)) +
geom_boxplot()
n400_table = one_fold_tbl_n400 %>%
group_by_all() %>%
summarise(n = n()/1000)
n400_table %>%
ggplot(aes(h, n)) +
geom_point(size = 3) +
ylim(c(0, 0.1))+
facet_wrap(.~p)
##### One -Fold CV #####
# not in paper
load("data/one_fold_cv_n400_OU.RData")
one_fold_tbl_n400 = tibble(h = one_fold_cv_n400 %>% unlist(), p = gl(3, 1000, labels = p.seq))
one_fold_tbl_n400 %>%
ggplot(aes(y = h, x = p, col = p)) +
geom_boxplot()
n400_table = one_fold_tbl_n400 %>%
group_by_all() %>%
summarise(n = n()/1000)
n400_table %>%
ggplot(aes(h, n)) +
geom_point(size = 3) +
ylim(c(0, 0.1))+
facet_wrap(.~p)
one_fold_tbl_n400 %>%
summarise(.by = p, mean(h))
five_fold_tbl = tibble(h = five_fold_cv %>% unlist(), p = gl(5, 1000, labels = p.seq))
##### five fold cv #####
# not in paper
load("data/five_fold_cv_n400_OU.RData")
##### five fold cv #####
# not in paper
load("data/five_fold_cv_n100_OU.RData")
##### five fold cv #####
# not in paper
load("data/five_fold_cv_n400_OU.RData")
five_fold_tbl_n400 = tibble(h = five_fold_cv_n400 %>% unlist(), p = gl(5, 1000, labels = p.seq))
five_fold_tbl_n400 %>%
ggplot(aes(y = h, x = p, col = p)) +
geom_boxplot(size = .6) +
labs(title = "n = 400") +
theme(text = element_text(size = 18))
five_fold_table_n400 = five_fold_tbl_n400 %>%
group_by_all() %>%
summarise(n = n()/1000)
five_fold_tbl_n400 %>%
ggplot(aes(y = h, x = p, col = p)) +
geom_boxplot(size = .6) +
labs(title = "n = 400") +
theme(text = element_text(size = 18))
# FIgure 4
five_fold_tbl_n400 %>%
ggplot(aes(y = h, x = p, col = p)) +
geom_boxplot(size = .6) +
labs(title = "n = 400") +
theme(text = element_text(size = 18))
# Figure 4
five_fold_tbl_n400 %>%
ggplot(aes(y = h, x = p, col = p)) +
geom_boxplot(size = .6) +
labs(title = "n = 400") +
theme(text = element_text(size = 18))
five_fold_table_n400 = five_fold_tbl_n400 %>%
group_by_all() %>%
summarise(n = n()/1000)
# Figure 5
five_fold_table_n400 = five_fold_tbl_n400 %>%
group_by_all() %>%
summarise(n = n()/1000)
five_fold_table_n400 %>%
ggplot(aes(h, n)) +
geom_point(size = 3) +
facet_wrap(.~p, nrow = 1) +
ylab(NULL) +
labs(title = "n = 400") +
theme(text = element_text(size = 18))
# Figure 5
five_fold_table_n400 %>%
ggplot(aes(h, n)) +
geom_point(size = 3) +
facet_wrap(.~p, nrow = 1) +
ylab(NULL) +
labs(title = "n = 400") +
theme(text = element_text(size = 18))
five_fold_tbl_n400 %>%
summarise(.by = p, mean(h))
View(five_fold_cv)
##### five fold cv #####
# not in paper
load("data/five_fold_cv_OU.RData")
five_fold_tbl = tibble(h = five_fold_cv %>% unlist(), p = gl(5, 1000, labels = p.seq))
five_fold_tbl %>%
ggplot(aes(y = h, x = p, col = p)) +
geom_boxplot()
five_fold_table = five_fold_tbl %>%
group_by_all() %>%
summarise(n = n()/1000)
five_fold_table %>%
ggplot(aes(h, n)) +
geom_point(size = 3) +
ylim(c(0, 0.1))+
facet_wrap(.~p) +
ylab(NULL) +
labs(title = "n = 100")
##### Error Decomposition #####
load("data/error_decomp.RData")
# error_decomp_arr = error_decomp_arr[, -5, ]
error_decomp_arr |> dimnames() = list(p.seq, c("eps", "dsc", "prc", "mix", "sup"), n.seq)
error_decomp_tbl = error_decomp_arr |> as_tibble() |>
pivot_longer(cols = everything(),
names_to = c("term", "n"),
names_pattern = "(...).(.*)",
names_transform = list(term = as.factor, n = as.double),
values_to = "error") |>
mutate(p = rep(p.seq, each = 20))
error_decomp_tbl |>
filter(n == 400, term == "sup") |>
print(n = 100)
error_decomp_tbl |>
filter(p != 75) |>
ggplot(aes(x = n, y = error, col = term, lty = term)) +
geom_line(size = .6) +
facet_wrap(.~p, nrow = 1) +
theme(text = element_text(size = 18)) +
labs(y = "sup.error")
error_decomp_tbl |>
filter(p != 75) |>
ggplot(aes(x = n, y = error, col = term, lty = term)) +
geom_line(size = .6) +
facet_wrap(.~p, nrow = 1) +
theme(text = element_text(size = 18)) +
labs(y = "sup.error")
# Figure 6
error_decomp_tbl |>
filter(p != 75) |>
ggplot(aes(x = n, y = error, col = term, lty = term)) +
geom_line(size = .6) +
facet_wrap(.~p, nrow = 1) +
theme(text = element_text(size = 18)) +
labs(y = "sup.error")
error_decomp_tbl |>
ggplot(aes(x = p, y = error, col = term, lty = term)) +
geom_line() +
facet_wrap(.~n)
##### 2 Fold cv 2rv #####
five_fold_cv_2rv |> table() |> plot()
five_fold_cv_2rv |> boxplot()
#### Estimator Comparison ####
load("data/estimator_comparison.RData")
to_tibble = function(bw_comp, est = "mir", m = 1, Z = "OU") {
Reduce(rbind, bw_comp) |>
as_tibble() |>
rename(n = V1, p = V2, h = V3, sup.err = V4) |>
mutate(p = as.factor(p),
n = as.factor(n),
estimator = est,
m = m,
Z = Z)
}
OU_m0 = to_tibble(bw_comparison_OU_m0, m = 0)
# alrady contained in dataset
OU_m0 = to_tibble(bw_comparison_OU_m0, m = 0)
est_comp |>
filter(n == 100, p == 50, Z == "OU") |>
ggplot(aes(x = h, y = sup.err, lty = estimator, col = m)) +
geom_line(size = .6) +
lims(y = c(0.03, 1.2)) +
theme(text = element_text(size = 18)) +
labs(title = "Ornstein-Uhlenbeck", subtitle = "n = 100, p = 50")
# Figure 8b
est_comp |>
filter(n == 100, p == 50, Z == "2rv") |>
ggplot(aes(x = h, y = sup.err, lty = estimator, col = m)) +
geom_line(size = .6) +
lims(y = c(0.03, 1.1))+
theme(text = element_text(size = 18)) +
labs(title = "Process 2", subtitle = "n = 100, p = 50")
