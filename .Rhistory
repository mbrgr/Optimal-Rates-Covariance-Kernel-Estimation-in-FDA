OU_m0_full = to_tibble(bw_comparison_OU_m0_full, m = 0, est = "wd")
OU_m1_full = to_tibble(bw_comparison_OU_m1_full, est = "wd")
OU_m2_full = to_tibble(bw_comparison_OU_m2_full, m = 2, est = "wd")
rv2_m0 = to_tibble(bw_comparison_OU_m0_2rv, m = 0, Z  = "2rv")
rv2_m0_full = to_tibble(bw_comparison_OU_m0_full_2rv, m = 0, est = "wd", Z  = "2rv")
rv2_m1 = to_tibble(bw_comparison_OU_m1_2rv, Z  = "2rv")
rv2_m1_full = to_tibble(bw_comparison_OU_m1_full_2rv, est = "wd", Z  = "2rv")
rv2_m2 = to_tibble(bw_comparison_OU_m2_2rv, Z  = "2rv", m = 2)
rv2_m2_full = to_tibble(bw_comparison_OU_m2_full_2rv, est = "wd", Z  = "2rv", m = 2)
est_comp = rbind(OU_m0, OU_m1,
OU_m0_full, OU_m1_full,
OU_m2, OU_m2_full,
rv2_m0, rv2_m1,
rv2_m0_full, rv2_m1_full,
rv2_m2, rv2_m2_full) |>
mutate(estimator = as.factor(estimator),
m = as.factor(m), Z = as.factor(Z))
est_comp |>
filter(n == 100, p == 50, Z == "OU") |>
ggplot(aes(x = h, y = sup.err, lty = estimator, col = m)) +
geom_line() +
lims(y = c(0.03, 1.2))
est_comp |>
filter(n == 100, p == 50, Z == "2rv") |>
ggplot(aes(x = h, y = sup.err, lty = estimator, col = m)) +
geom_line() +
lims(y = c(0.03, 1.1))
est_comp |>
filter(n == 100, p == 50, Z == "OU") |>
ggplot(aes(x = h, y = sup.err, lty = estimator, col = m)) +
geom_line(size = .6) +
lims(y = c(0.03, 1.2)) +
theme(text = element_text(size = 18)) +
labs(title = "n = 100, p = 50")
est_comp |>
filter(n == 100, p == 50, Z == "2rv") |>
ggplot(aes(x = h, y = sup.err, lty = estimator, col = m)) +
geom_line(size = .6) +
lims(y = c(0.03, 1.1))+
theme(text = element_text(size = 18)) +
labs(title = "Ornstein-Uhlenbeck", subtitle = "n = 100, p = 50")
est_comp |>
filter(n == 100, p == 50, Z == "2rv") |>
ggplot(aes(x = h, y = sup.err, lty = estimator, col = m)) +
geom_line(size = .6) +
lims(y = c(0.03, 1.1))+
theme(text = element_text(size = 18)) +
labs(title = "Process 2", subtitle = "n = 100, p = 50")
est_comp |>
filter(n == 100, p == 50, Z == "OU") |>
ggplot(aes(x = h, y = sup.err, lty = estimator, col = m)) +
geom_line(size = .6) +
lims(y = c(0.03, 1.2)) +
theme(text = element_text(size = 18)) +
labs(title = "Ornstein-Uhlenbeck", subtitle = "n = 100, p = 50")
est_comp |>
filter(n == 100, p == 50, Z == "2rv") |>
ggplot(aes(x = h, y = sup.err, lty = estimator, col = m)) +
geom_line(size = .6) +
lims(y = c(0.03, 1.1))+
theme(text = element_text(size = 18)) +
labs(title = "Process 2", subtitle = "n = 100, p = 50")
##### Comparison of mirrored and non-mirrored estimator #####
###### OU-Process #####
# calculate local polynomial weights
p.eval = 150
H = seq(1, 3/p, -0.05)
#### Grafics of estimation ####
set.seed(513)
n = 100
p = 40
x.design = (1:p - 1/2)/p
p.eval = 150
h = 0.5
# Target function
sigma = 2; theta = 3
x = observation_grid(p.eval, comp = "full")[1:p.eval, 1]
Y = FDA_observation(n, x.design,
r.process = OU, process.arg = list(alpha = theta, sigma = sigma, x0 = 0),
eps.arg = list(sd = 0.5))
Z = observation_transformation(Y)
temp = apply(Y, 1, tcrossprod) - as.vector(tcrossprod(colMeans(Y)))
Z.all = rowSums(temp)/(n-1)
df.all = data.frame(observation_grid(p, comp = "full"), Z.all)
# Observation points
plot_ly(df.all, x = ~Var1, y = ~Var2, z = ~Z.all, size = .4) |> add_markers()
# evaluate target covariance kernel
cov.ou.eval = matrix(apply(observation_grid(p.eval, comp = "full"), 1, function(x){
cov.ou(x, sigma, theta)
}), p.eval, p.eval)
# plot observations with covariance kernel
plot_ly(df.all, x = ~Var1, y = ~Var2, z = ~Z.all, size = .4) |>
add_markers() |>
add_surface(x = x, y = x, z = cov.ou.eval,
colors = c('#BF382A', '#0C4B8E'), alpha = .3) |>
layout(scene = list(xaxis = list(title = ""),
yaxis = list(title = ""),
zaxis = list(title = "")))
##### Comparison of mirrored and non-mirrored estimator #####
###### OU-Process #####
# calculate local polynomial weights
p.eval = 150
H = seq(1, 3/p, -0.05)
est = eval_weights(W, Z)
# plot with estimation
cs2 = list(c(0, 1), c("lightblue", "darkred"))
plot_ly(df.all, x = ~Var1, y = ~Var2, z = ~Z.all, size = .4) |>
add_surface(x = x, y = x, z = cov.ou.eval, alpha = .3) |>
add_surface(x = x, y = x, z = est, colorscale = cs2, alpha = .3)|>
layout(scene = list(xaxis = list(title = ""),
yaxis = list(title = ""),
zaxis = list(title = "")))
# calculate estimator that does not mirror the results on the diagonal (without diagonal)
#h0_cv =  k_fold_cv(Y, H, m = 0, h.parallel = T,
#                   h.parallel.environment = T)
W0 = local_polynomial_weights(p, 0.1, p.eval, T, m = 1, grid.type = "without diagonal")
Z0 = observation_transformation(Y, grid.type = "without diagonal")
est_standard = eval_weights(W0, Z0)
# compare estimate without the diagonal and without mirroring with actual kernel
plot_ly(df.all, x = ~Var1, y = ~Var2, z = ~Z.all, size = .4) |>
add_surface(x = x, y = x, z = cov.ou.eval, alpha = .3) |>
add_surface(x = x, y = x, z = est_standard, colorscale = cs2, alpha = .3)|>
layout(scene = list(xaxis = list(title = ""),
yaxis = list(title = ""),
zaxis = list(title = "")))
load("C:/Users/mberger.PC12599/HESSENBOX/GitHub/FDA-Covariance-Estimator/data/data_20240529_bw_comp.RData")
bw_comparison_tbl = Reduce(rbind, bw_comparison) |>
as_tibble() |>
rename(n = V1, p = V2, h = V3, sup.err = V4) |>
mutate(p = as.factor(p), n = as.factor(n))
bw_comparison_tbl |>
filter(n != 50) |>
ggplot() +
geom_line(aes(x = h, y = sup.err, col = n, linetype = p), size = .6) +
ylim(c(0, 0.65)) +
theme(text = element_text(size = 18))
bw_comparison_tbl |>
filter(n == 100, p == 75) |>
ggplot() +
geom_line(aes(x = h, y = sup.err, linetype = p)) +
ylim(c(0, 0.9))
bw_comparison_tbl |>
filter(n == 400) |>
ggplot() +
geom_line(aes(x = h, y = sup.err, col = n, linetype = p), size = .6) +
ylim(c(0, 0.65)) +
theme(text = element_text(size = 18))
bw_comparison_tbl |>
filter(n == 400) |>
ggplot() +
geom_line(aes(x = h, y = sup.err, col = p, linetype = p), size = .6) +
ylim(c(0, 0.65)) +
theme(text = element_text(size = 18))
bw_comparison_tbl |>
filter(n == 400) |>
ggplot() +
geom_line(aes(x = h, y = sup.err, col = p, linetype = p), size = .6) +
ylim(c(0, 0.5)) +
theme(text = element_text(size = 18))
bw_comparison_tbl |>
filter(n == 400) |>
ggplot() +
geom_line(aes(x = h, y = sup.err, col = p, linetype = p), size = .6) +
ylim(c(0, 0.51)) +
theme(text = element_text(size = 18))
bw_comparison_tbl |>
filter(n == 400) |>
ggplot() +
geom_line(aes(x = h, y = sup.err, col = p, linetype = p), size = .6) +
ylim(c(0, 0.52)) +
theme(text = element_text(size = 18))
bw_comparison_tbl |>
filter(n == 400) |>
ggplot() +
geom_line(aes(x = h, y = sup.err, col = p, linetype = p), size = .6) +
ylim(c(025, 0.52)) +
theme(text = element_text(size = 18))
bw_comparison_tbl |>
filter(n == 400) |>
ggplot() +
geom_line(aes(x = h, y = sup.err, col = p, linetype = p), size = .6) +
ylim(c(0.25, 0.52)) +
theme(text = element_text(size = 18))
bw_comparison_tbl |>
filter(n == 400) |>
ggplot() +
geom_line(aes(x = h, y = sup.err, col = p, linetype = p), size = .6) +
ylim(c(0.025, 0.52)) +
theme(text = element_text(size = 18))
bw_comparison_tbl |>
filter(n == 400) |>
ggplot() +
geom_line(aes(x = h, y = sup.err, col = p, linetype = p), size = .6) +
ylim(c(0.02, 0.52)) +
theme(text = element_text(size = 18))
bw_comparison_tbl |>
filter(n == 400) |>
ggplot() +
geom_line(aes(x = h, y = sup.err, col = p, linetype = p), size = .6) +
ylim(c(0.02, 0.52)) +
theme(text = element_text(size = 18)) +
labs(title = "n = 400")
library(tidyverse)
library(plotly)
library(lubridate)
library(hms)
library(biLocPol)
library(future.apply)
load("C:/Users/mberger.PC12599/HESSENBOX/GitHub/FDA-Covariance-Estimator/data/weather_data_nuremberg.RData")
N$DATUM = str_split_i(N$MESS_DATUM, pattern = " ", i = 1) |> ymd()
tage = c(1, 4, 8, 12, 15, 18, 22, 25, 29)
N = N |>
as_tibble() |>
filter(TAG %in% tage)
N |>
filter(TAG %in% c(1, 8, 15, 22, 29)) |>
ggplot() +
geom_line(aes(x = UHRZEIT, y = TT_10, group = JAHR*TAG, colour = JAHR), alpha = .4) +
facet_wrap(MONAT ~.)
N |>
filter(TAG %in% c(1, 15, 29),
MONAT == 8) |>
ggplot() +
geom_line(aes(x = UHRZEIT, y = TT_10, group = JAHR*TAG, colour = JAHR), alpha = .6) +
labs(y = "Temp. in CÂ°", x = "hours", title = "Temp. in August", colour = "year") +
theme(text = element_text(size = 18))
N_wide = N |>
filter(TAG %in% tage) |>  # Beschraenkung auf nicht aufeinanderfolgende Tage
mutate(UHRZEIT = as.character(UHRZEIT)) |>
select(JAHR, MONAT, TAG, UHRZEIT, TT_10) |>
pivot_wider(names_from = UHRZEIT,
values_from = TT_10)
###### August ######
Y = N_wide |>
filter(MONAT == 8) |>
select(-(1:3))
Z = Y |>
as.data.frame() |> # TODO: fix this in biLocPol
observation_transformation(na.rm = T)
# h_cv = k_fold_cv(Y, H, K = 5, m = 1, h.parallel = T, h.parallel.environment = T, na.rm = T)
p.eval = 72
W = local_polynomial_weights(144, 0.2, p.eval, T, m = 1)
g_hat = eval_weights(W, Z)
var_hat = diag(g_hat)
eval_time = N$UHRZEIT[1:146][seq(2, 144, 2)]
var_est = tibble(var_hat, x = eval_time)
var_est |>
ggplot(aes(x = x, y = sqrt(var_hat))) +
geom_line(size = .7) +
lims(y = c(0.2, 5)) +
labs(y = NULL, x = "hour", title = "Std. deviation of temperatur in August") +
theme(legend.position = "none",
text = element_text(size = 18))
cov_est_df = data.frame(x = W$x.eval, y = W$x.eval, z = g_hat)
var_est |>
ggplot(aes(x = x, y = sqrt(var_hat))) +
geom_line(size = .7) +
lims(y = c(0.2, 5)) +
labs(y = NULL, x = "hour", title = "Std. deviation of temperatur in August") +
theme(legend.position = "none",
text = element_text(size = 18))
cov_est_df = data.frame(x = W$x.eval, y = W$x.eval, z = g_hat)
cs2 = list(c(0, 1), c("lightblue", "darkred"))
plot_ly(cov_est_df, x = ~x, y = ~y, z = ~g_hat, size = .4) |>
add_surface(colorscale = cs2, alpha = .3) |>
layout(scene = list(xaxis = list(title = ""),
yaxis = list(title = ""),
zaxis = list(title = "")))
temp = matrix(diag(g_hat), p.eval, p.eval)
cor_hat = g_hat / sqrt( temp * t(temp) )
plot_ly(cov_est_df, x = ~x*24, y = ~y*24, z = ~cor_hat, size = .4) |>
add_surface(colorscale = cs2, alpha = .3) |>
layout(scene = list(xaxis = list(title = ""),
yaxis = list(title = ""),
zaxis = list(title = "")))
###### Januar ######
Y1 = N_wide |>
filter(MONAT == 1) |>
select(-(1:3))
Z1 = Y1 |>
as.data.frame() |> # TODO: fix this in biLocPol
observation_transformation(na.rm = T)
N |>
filter(TAG %in% c(1, 15, 29),
MONAT == 1) |>
ggplot() +
geom_line(aes(x = UHRZEIT, y = TT_10, group = JAHR*TAG, colour = JAHR), alpha = .7) +
labs(y = "Temp. in CÂ°", x = "hours", title = "Temp. in January", colour = "year") +
theme(text = element_text(size = 18))
# h_cv = k_fold_cv(Y, H, K = 5, m = 1, h.parallel = T, h.parallel.environment = T, na.rm = T)
# p.eval = 72
# W1 = local_polynomial_weights(144, 0.2, p.eval, T, m = 2)
g_hat1 = eval_weights(W, Z1)
var_hat1 = diag(g_hat1)
var_est1 = tibble(var_hat = var_hat1, x = eval_time)
var_est1 |>
ggplot(aes(x = x, y = sqrt(var_hat1))) +
geom_line(size = .6) +
lims(y = c(0.2, 5)) +
labs(x = NULL, y = "hour", title = "Std. deviation of temperatur in January") +
theme(text = element_text(size = 18))
# both std. deviations in one picture
ggplot() +
geom_line(data    = var_est,
mapping = aes(x = x, y = sqrt(var_hat))) +
geom_line(size = .6) +
lims(y = c(0.2, 5))
# both std. deviations in one picture
ggplot() +
geom_line(data    = var_est,
mapping = aes(x = x, y = sqrt(var_hat))) +
geom_line(data    = var_est1,
mapping = aes(x = x, y = sqrt(var_hat1))) +
geom_line(size = .6) +
lims(y = c(0.2, 5))
# both std. deviations in one picture
ggplot() +
geom_line(data    = var_est,
mapping = aes(x = x, y = sqrt(var_hat), lty = "January")) +
geom_line(data    = var_est1,
mapping = aes(x = x, y = sqrt(var_hat1))) +
geom_line(size = .6) +
lims(y = c(0.2, 5))
mapping = aes(x = x, y = sqrt(var_hat1, lty = "August")) +
# both std. deviations in one picture
ggplot() +
geom_line(data    = var_est,
mapping = aes(x = x, y = sqrt(var_hat), lty = "January")) +
geom_line(data    = var_est1,
mapping = aes(x = x, y = sqrt(var_hat1), lty = "August")) +
geom_line(size = .6) +
lims(y = c(0.2, 5))
# both std. deviations in one picture
ggplot() +
geom_line(data    = var_est,
mapping = aes(x = x, y = sqrt(var_hat), lty = "January")) +
geom_line(data    = var_est1,
mapping = aes(x = x, y = sqrt(var_hat1), lty = "August")) +
geom_line(size = .6) +
lims(y = c(0.2, 5))
# both std. deviations in one picture
ggplot() +
geom_line(data    = var_est1,
mapping = aes(x = x, y = sqrt(var_hat1), lty = "January", col = "January")) +
geom_line(data    = var_est,
mapping = aes(x = x, y = sqrt(var_hat), lty = "August", col = "August")) +
geom_line(size = .6) +
lims(y = c(0.2, 5))
# both std. deviations in one picture
ggplot() +
geom_line(data    = var_est1,
mapping = aes(x = x, y = sqrt(var_hat1), lty = "January", col = "January")) +
geom_line(data    = var_est,
mapping = aes(x = x, y = sqrt(var_hat), lty = "August", col = "August")) +
geom_line(size = .6) +
lims(y = c(0.2, 5)) +
labs(x = NULL, y = "hour", title = "Std. deviation of temperatur in January") +
theme(text = element_text(size = 18))
# both std. deviations in one picture
ggplot() +
geom_line(data    = var_est1,
mapping = aes(x = x, y = sqrt(var_hat1), lty = "January", col = "January")) +
geom_line(data    = var_est,
mapping = aes(x = x, y = sqrt(var_hat), lty = "August", col = "August")) +
geom_line(size = .6) +
lims(y = c(0.2, 5)) +
labs(x = NULL, y = "hour", title = "Std. deviation of temperatur in January") +
theme(text = element_text(size = 18),
colour = "month")
# both std. deviations in one picture
ggplot() +
geom_line(data    = var_est1,
mapping = aes(x = x, y = sqrt(var_hat1), lty = "January", col = "January")) +
geom_line(data    = var_est,
mapping = aes(x = x, y = sqrt(var_hat), lty = "August", col = "August")) +
geom_line(size = .6) +
lims(y = c(0.2, 5)) +
labs(x = NULL, y = "hour", title = "Std. deviation of temperatur in January") +
theme(text = element_text(size = 18)) +
scale_colout_manual(name = "month")
# both std. deviations in one picture
ggplot() +
geom_line(data    = var_est1,
mapping = aes(x = x, y = sqrt(var_hat1), lty = "January", col = "January")) +
geom_line(data    = var_est,
mapping = aes(x = x, y = sqrt(var_hat), lty = "August", col = "August")) +
geom_line(size = .6) +
lims(y = c(0.2, 5)) +
labs(x = NULL, y = "hour", title = "Std. deviation of temperatur in January") +
theme(text = element_text(size = 18)) +
scale_colour_manual(name = "month")
# both std. deviations in one picture
ggplot() +
geom_line(data    = var_est1,
mapping = aes(x = x, y = sqrt(var_hat1), lty = "January", col = "January")) +
geom_line(data    = var_est,
mapping = aes(x = x, y = sqrt(var_hat), lty = "August", col = "August")) +
geom_line(size = .6) +
lims(y = c(0.2, 5)) +
labs(x = NULL, y = "hour", title = "Std. deviation of temperatur in January") +
theme(text = element_text(size = 18)) +
scale_colour_discrerte(name = "month")
# both std. deviations in one picture
ggplot() +
geom_line(data    = var_est1,
mapping = aes(x = x, y = sqrt(var_hat1), lty = "January", col = "January")) +
geom_line(data    = var_est,
mapping = aes(x = x, y = sqrt(var_hat), lty = "August", col = "August")) +
geom_line(size = .6) +
lims(y = c(0.2, 5)) +
labs(x = NULL, y = "hour", title = "Std. deviation of temperatur in January") +
theme(text = element_text(size = 18)) +
scale_colour_discrete(name = "month")
# both std. deviations in one picture
ggplot() +
geom_line(data    = var_est1,
mapping = aes(x = x, y = sqrt(var_hat1), lty = "January", col = "January")) +
geom_line(data    = var_est,
mapping = aes(x = x, y = sqrt(var_hat), lty = "August", col = "August")) +
geom_line(size = .6) +
lims(y = c(0.2, 5)) +
labs(x = NULL, y = "hour", title = "Std. deviation of temperatur in January") +
theme(text = element_text(size = 18)) +
scale_linetype_discrete(name = "month")
# both std. deviations in one picture
ggplot() +
geom_line(data    = var_est1,
mapping = aes(x = x, y = sqrt(var_hat1), lty = "January")) +
geom_line(data    = var_est,
mapping = aes(x = x, y = sqrt(var_hat), lty = "August")) +
geom_line(size = .6) +
lims(y = c(0.2, 5)) +
labs(x = NULL, y = "hour", title = "Std. deviation of temperatur in January") +
theme(text = element_text(size = 18)) +
scale_linetype_discrete(name = "month")
# both std. deviations in one picture
ggplot() +
geom_line(data    = var_est1,
mapping = aes(x = x, y = sqrt(var_hat1), lty = "January")) +
geom_line(data    = var_est,
mapping = aes(x = x, y = sqrt(var_hat), lty = "August")) +
geom_line(size = .6) +
lims(y = c(0.2, 5)) +
labs(y = NULL, x = "hour", title = "Std. deviation of temperatur in January") +
theme(text = element_text(size = 18)) +
scale_linetype_discrete(name = "month")
# both std. deviations in one picture
ggplot() +
geom_line(data    = var_est1,
mapping = aes(x = x, y = sqrt(var_hat1), lty = "January")) +
geom_line(data    = var_est,
mapping = aes(x = x, y = sqrt(var_hat), lty = "August")) +
geom_line(size = .6) +
lims(y = c(0.2, 5)) +
labs(y = NULL, x = "hour", title = "Std. deviation of temperatur in January") +
theme(text = element_text(size = 18), legend.position = "top") +
scale_linetype_discrete(name = "month")
# both std. deviations in one picture
ggplot() +
geom_line(data    = var_est1,
mapping = aes(x = x, y = sqrt(var_hat1), lty = "January")) +
geom_line(data    = var_est,
mapping = aes(x = x, y = sqrt(var_hat), lty = "August")) +
geom_line(size = .6) +
lims(y = c(0.2, 5)) +
labs(y = NULL, x = "hour") +
theme(text = element_text(size = 18), legend.position = "top") +
scale_linetype_discrete(name = "month")
# both std. deviations in one picture
ggplot() +
geom_line(data    = var_est1,
mapping = aes(x = x, y = sqrt(var_hat1), lty = "January")) +
geom_line(data    = var_est,
mapping = aes(x = x, y = sqrt(var_hat), lty = "August")) +
geom_line(size = .6) +
lims(y = c(0.2, 5)) +
labs(y = NULL, x = "hour") +
theme(text = element_text(size = 18), legend.position = "top") +
scale_linetype_discrete(name = "month:")
# both std. deviations in one picture
ggplot() +
geom_line(data    = var_est1,
mapping = aes(x = x, y = sqrt(var_hat1), lty = "January")) +
geom_line(data    = var_est,
mapping = aes(x = x, y = sqrt(var_hat), lty = "August")) +
geom_line(size = .6) +
lims(y = c(0.2, 5)) +
labs(y = NULL, x = "hour") +
theme(text = element_text(size = 18), legend.position = "top") +
scale_linetype_discrete(name = "month: ")
# both std. deviations in one picture
ggplot() +
geom_line(data    = var_est1,
mapping = aes(x = x, y = sqrt(var_hat1), lty = "January")) +
geom_line(data    = var_est,
mapping = aes(x = x, y = sqrt(var_hat), lty = "August")) +
geom_line(size = .6) +
lims(y = c(0.2, 5)) +
labs(y = NULL, x = "hour") +
theme(text = element_text(size = 18), legend.position = "top") +
scale_linetype_discrete(name = "month:  ")
# both std. deviations in one picture
ggplot() +
geom_line(data    = var_est1,
mapping = aes(x = x, y = sqrt(var_hat1), lty = "January")) +
geom_line(data    = var_est,
mapping = aes(x = x, y = sqrt(var_hat), lty = "August")) +
geom_line(size = .6) +
lims(y = c(0.2, 5)) +
labs(y = NULL, x = "hour") +
theme(text = element_text(size = 18), legend.position = "top") +
scale_linetype_discrete(name = "Std. deviation in month:  ")
