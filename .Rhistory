add_surface(x = x, y = x, z = cov10.ou.eval, colorscale = c("blue", "yellow")) |>
layout(scene = list(xaxis = list(title = ""),
yaxis = list(title = ""),
zaxis = list(title = "")))
plot_ly() |>
add_surface(x = x, y = x, z = eval_weights(w, Z)[,,3],
colorscale = c('#BF382A', '#0C4B8E'), alpha = .3) |>
add_surface(x = x, y = x, z = cov10.ou.eval, colorscale = c("blue", "yellow")) |>
layout(scene = list(xaxis = list(title = ""),
yaxis = list(title = ""),
zaxis = list(title = "")))
plot_ly() |>
add_surface(x = x, y = x, z = eval_weights(w, Z)[,,3],
colors = c('#BF382A', '#0C4B8E'), alpha = .3) |>
add_surface(x = x, y = x, z = cov10.ou.eval, colorscale = c("blue", "yellow")) |>
layout(scene = list(xaxis = list(title = ""),
yaxis = list(title = ""),
zaxis = list(title = "")))
plot_ly() |>
add_surface(x = x, y = x, z = cov10.ou.eval, colorscale = c("blue", "yellow")) |>
add_surface(x = x, y = x, z = eval_weights(w, Z)[,,3],
colors = c('#BF382A', '#0C4B8E'), alpha = .3) |>
layout(scene = list(xaxis = list(title = ""),
yaxis = list(title = ""),
zaxis = list(title = "")))
plot_ly() |>
add_surface(x = x, y = x, z = cov10.ou.eval, colorscale = c("blue", "yellow"), alpha= .5) |>
add_surface(x = x, y = x, z = eval_weights(w, Z)[,,3],
colors = c('#BF382A', '#0C4B8E'), alpha = .3) |>
layout(scene = list(xaxis = list(title = ""),
yaxis = list(title = ""),
zaxis = list(title = "")))
plot_ly() |>
add_surface(x = x, y = x, z = cov10.ou.eval, colorscale = c("blue", "yellow"), alpha= .5) |>
add_surface(x = x, y = x, z = eval_weights(w, Z)[,,3],
colorscale = c('#BF382A', '#0C4B8E'), alpha = .3) |>
layout(scene = list(xaxis = list(title = ""),
yaxis = list(title = ""),
zaxis = list(title = "")))
plot_ly() |>
add_surface(x = x, y = x, z = cov10.ou.eval, colorscale = c("blue", "yellow"), alpha= .5) |>
add_surface(x = x, y = x, z = eval_weights(w, Z)[,,3],
colors = c('#BF382A', '#0C4B8E'), alpha = .3) |>
layout(scene = list(xaxis = list(title = ""),
yaxis = list(title = ""),
zaxis = list(title = "")))
plot_ly() |>
add_surface(x = x, y = x, z = cov10.ou.eval, colorscale = c("blue", "yellow"), alpha= .5) |>
add_surface(x = x, y = x, z = eval_weights(w, Z)[,,3], alpha = .5,
colors = c('#BF382A', '#0C4B8E')) |>
layout(scene = list(xaxis = list(title = ""),
yaxis = list(title = ""),
zaxis = list(title = "")))
which(x.design > 0.1 & x.design < (1-0.1))
for(k in 1:length(n.seq)){
n = n.seq[k]
sup.err[k] =  mean(replicate(N, {
Y = biLocPol::OU(n, x.design, sigma = sigma, alpha = theta) + matrix(rnorm(n * p, 0, 0.75), n, p) # n x p
Z = observation_transformation(Y)
trim = which(x.design > 0.1 & x.design < (1-0.1))
estimate = eval_weights(w, Z)[,,3]
max(abs(estimate - G10)[trim, trim])
}))
}
n = 50
Y = biLocPol::OU(n, x.design, sigma = sigma, alpha = theta) + matrix(rnorm(n * p, 0, 0.75), n, p) # n x p
Z = observation_transformation(Y)
trim = which(x.design > 0.1 & x.design < (1-0.1))
estimate = eval_weights(w, Z)[,,3]
max(abs(estimate - G10)[trim, trim])
bandwidth_evaluation_derivative_OU = function(h, p, p.eval, n.seq, N){
x.design = (1:p - 0.5)/p
s = length(h)
x.eval.grid = observation_grid(p.eval, comp = "full")
G10 = apply(x.eval.grid, 1, del10_cov_OU)
sup.err10 = numeric(length(n.seq))
w = local_polynomial_weights(p, h, p.eval, F, m = 2, grid.type = "less", del = 1)
for(k in 1:length(n.seq)){
n = n.seq[k]
sup.err[k] =  mean(replicate(N, {
Y = biLocPol::OU(n, x.design, sigma = sigma, alpha = theta) + matrix(rnorm(n * p, 0, 0.75), n, p) # n x p
Z = observation_transformation(Y)
trim = which(x.design > 0.1 & x.design < (1-0.1))
estimate = eval_weights(w, Z)[,,3]
max(abs(estimate - G10)[trim, trim])
}))
}
rm(w)
matrix(c(n.seq, rep(c(p, h), each = length(n.seq)), sup.err), ncol =  4)
}
##### Bandwidth Comparison for Covariance derivative estimation #####
n = 400
N = 1000
n.seq = c(50, 100, 200, 400)
p.seq = c(15, 25, 50, 75, 100)
p.eval = 100
H = lapply(1:length(p.seq), function(l){seq(1, 3/p.seq[l], -0.05)})
H
H = lapply(1:length(p.seq), function(l){seq(.7, 3/p.seq[l], -0.05)})
# Parameter OU Process
theta = 2; sigma = 3
# Standard deviation for additional errors
sd = 0.75
bw_comparison = list()
cl = parallel::makeCluster(parallel::detectCores( ) - 1)
future::plan(future::multisession)
load("data/bw_comp_OU.RData")
bw_comparison_tbl = Reduce(rbind, bw_comparison) |>
as_tibble() |>
rename(n = V1, p = V2, h = V3, sup.err = V4) |>
mutate(p = as.factor(p), n = as.factor(n))
bw_comparison_tbl |>
filter(n != 50) |>
ggplot() +
geom_line(aes(x = h, y = sup.err, col = n, linetype = p), size = .6) +
ylim(c(0, 0.65)) +
theme(text = element_text(size = 18))
# Figure 3:
bw_comparison_tbl |>
filter(n == 400) |>
ggplot() +
geom_line(aes(x = h, y = sup.err, col = p, linetype = p), size = .6) +
ylim(c(0.02, 0.52)) +
theme(text = element_text(size = 18)) +
labs(title = "n = 400")
library(ggplot2)
bw_comparison_tbl |>
filter(n != 50) |>
ggplot() +
geom_line(aes(x = h, y = sup.err, col = n, linetype = p), size = .6) +
ylim(c(0, 0.65)) +
theme(text = element_text(size = 18))
library(tidyverse)
bw_comparison_tbl = Reduce(rbind, bw_comparison) |>
as_tibble() |>
rename(n = V1, p = V2, h = V3, sup.err = V4) |>
mutate(p = as.factor(p), n = as.factor(n))
bw_comparison_tbl |>
filter(n != 50) |>
ggplot() +
geom_line(aes(x = h, y = sup.err, col = n, linetype = p), size = .6) +
ylim(c(0, 0.65)) +
theme(text = element_text(size = 18))
# Figure 3:
bw_comparison_tbl |>
filter(n == 400) |>
ggplot() +
geom_line(aes(x = h, y = sup.err, col = p, linetype = p), size = .6) +
ylim(c(0.02, 0.52)) +
theme(text = element_text(size = 18)) +
labs(title = "n = 400")
bw_comparison_tbl |>
filter(n == 400) |>
ggplot() +
geom_point(aes(x = h, y = sup.err, col = p, linetype = p), size = .6) +
ylim(c(0.02, 0.52)) +
theme(text = element_text(size = 18)) +
labs(title = "n = 400")
bw_comparison_tbl |>
filter(n == 400) |>
ggplot() +
geom_point(aes(x = h, y = sup.err, col = p, linetype = p), size = .6) +
ylim(c(0.02, 0.52)) +
labs(title = "n = 400")
bw_comparison_tbl |>
filter(n == 400) |>
ggplot() +
geom_point(aes(x = h, y = sup.err, col = p, linetype = p)) +
ylim(c(0.02, 0.52)) +
labs(title = "n = 400")
bw_comparison_tbl |>
filter(n == 400) |>
ggplot() +
geom_point(aes(x = h, y = sup.err, col = p)) +
ylim(c(0.02, 0.52)) +
labs(title = "n = 400")
bw_comparison_tbl |>
filter(n == 400) |>
ggplot() +
geom_point(aes(x = h, y = sup.err, col = p, pch = p)) +
ylim(c(0.02, 0.52)) +
labs(title = "n = 400")
bw_comparison_tbl |>
filter(n == 400) |>
ggplot() +
geom_point(aes(x = h, y = sup.err, col = p, pch = p)) +
ylim(c(0.02, 0.52)) +
labs(title = "n = 400")
ggsave("Grafics/cov_optimal_bw_n400.png", device = "png", width = 5, height = 3.8, units = "in")
bw_comparison_tbl |>
filter(n == 100, p == 75) |>
ggplot() +
geom_line(aes(x = h, y = sup.err, linetype = p)) +
ylim(c(0, 0.9))
min_h_tibble = bw_comparison_tbl |>
group_by(n, p) |>
slice_min(sup.err)
bw_comparison_tbl |>
filter(n == 100) |>
ggplot( ) +
geom_line(aes(x = h, y = sup.err, col = p, linetype = p)) +
ylim(c(0.03, 0.65)) +
labs(title = "n = 100")
##### One -Fold CV #####
# not in paper
load("data/one_fold_cv_n400_OU.RData")
one_fold_tbl_n400 = tibble(h = one_fold_cv_n400 %>% unlist(), p = gl(3, 1000, labels = p.seq))
one_fold_tbl_n400 %>%
ggplot(aes(y = h, x = p, col = p)) +
geom_boxplot()
n400_table = one_fold_tbl_n400 %>%
group_by_all() %>%
summarise(n = n()/1000)
n400_table %>%
ggplot(aes(h, n)) +
geom_point(size = 3) +
ylim(c(0, 0.1))+
facet_wrap(.~p)
one_fold_tbl_n400 %>%
summarise(.by = p, mean(h))
##### five fold cv #####
load("data/five_fold_cv_OU.RData")
five_fold_tbl = tibble(h = five_fold_cv %>% unlist(), p = gl(5, 1000, labels = p.seq))
five_fold_tbl %>%
ggplot(aes(y = h, x = p, col = p)) +
geom_boxplot()
five_fold_table = five_fold_tbl %>%
group_by_all() %>%
summarise(n = n()/1000)
# Figure in Appendix
five_fold_table %>%
ggplot(aes(h, n)) +
geom_point(size = 3) +
ylim(c(0, 0.1))+
facet_wrap(.~p) +
ylab(NULL) +
labs(title = "n = 100")
##### five fold cv #####
load("data/five_fold_cv_OU.RData")
five_fold_tbl = tibble(h = five_fold_cv %>% unlist(), p = gl(5, 1000, labels = p.seq))
five_fold_tbl = tibble(h = five_fold_cv_n400 %>% unlist(), p = gl(5, 1000, labels = p.seq))
five_fold_tbl %>%
ggplot(aes(y = h, x = p, col = p)) +
geom_boxplot()
# Figure in Appendix
five_fold_table %>%
ggplot(aes(h, n)) +
geom_point(size = 3) +
ylim(c(0, 0.1))+
facet_wrap(.~p) +
ylab(NULL) +
labs(title = "n = 100")
##### five fold cv #####
# In Paper
five_fold_tbl_n400 = tibble(h = five_fold_cv_n400 %>% unlist(), p = gl(5, 1000, labels = p.seq))
# Figure 4
five_fold_tbl_n400 %>%
ggplot(aes(y = h, x = p, col = p)) +
geom_boxplot(size = .6) +
labs(title = "n = 400") +
theme(text = element_text(size = 18))
# Figure 4
five_fold_tbl_n400 %>%
ggplot(aes(y = h, x = p, col = p)) +
geom_boxplot(size = .6) +
labs(title = "n = 400") #+
# theme(text = element_text(size = 18))
ggsave("Grafics/cov_5fcv_bw_n400.png", device = "png", width = 5, height = 3.8, units = "in")
five_fold_table_n400 = five_fold_tbl_n400 %>%
group_by_all() %>%
summarise(n = n()/1000)
# Figure 5
five_fold_table_n400 %>%
ggplot(aes(h, n)) +
geom_point(size = 3) +
facet_wrap(.~p, nrow = 1) +
ylab(NULL) +
labs(title = "n = 400") +
theme(text = element_text(size = 18))
#  theme(text = element_text(size = 18))
ggsave("Grafics/cov_5fcv_bw_n400_table.png", device = "png", width = 5, height = 3.8, units = "in")
# Figure in Appendix
five_fold_table %>%
ggplot(aes(h, n)) +
geom_point(size = 3) +
ylim(c(0, 0.1))+
facet_wrap(.~p) +
ylab(NULL) +
labs(title = "n = 100")
##### five fold cv #####
load("data/five_fold_cv_OU.RData")
View(five_fold_cv_n400)
View(error_decomp_tbl)
load("C:/Users/mberger.PC12599/HESSENBOX/GitHub/Optimal-Rates-Covariance-Kernel-Estimation-in-FDA/data/bw_comp_OU.RData")
n400_table %>%
ggplot(aes(h, n)) +
geom_point(size = 3) +
ylim(c(0, 0.1))+
facet_wrap(.~p)
##### One -Fold CV #####
# not in paper
load("data/one_fold_cv_n400_OU.RData")
n400_table %>%
ggplot(aes(h, n)) +
geom_point(size = 3) +
ylim(c(0, 0.1))+
facet_wrap(.~p)
##### One -Fold CV #####
# not in paper
load("data/one_fold_cv_n400_OU.RData")
one_fold_tbl_n400 = tibble(h = one_fold_cv_n400 %>% unlist(), p = gl(3, 1000, labels = p.seq))
one_fold_tbl_n400 %>%
ggplot(aes(y = h, x = p, col = p)) +
geom_boxplot()
n400_table = one_fold_tbl_n400 %>%
group_by_all() %>%
summarise(n = n()/1000)
n400_table %>%
ggplot(aes(h, n)) +
geom_point(size = 3) +
ylim(c(0, 0.1))+
facet_wrap(.~p)
one_fold_tbl_n400 %>%
summarise(.by = p, mean(h))
load("data/bw_comp_OU.RData")
bw_comparison_tbl = Reduce(rbind, bw_comparison) |>
as_tibble() |>
rename(n = V1, p = V2, h = V3, sup.err = V4) |>
mutate(p = as.factor(p), n = as.factor(n))
bw_comparison_tbl |>
filter(n != 50) |>
ggplot() +
geom_line(aes(x = h, y = sup.err, col = n, linetype = p), size = .6) +
ylim(c(0, 0.65)) +
theme(text = element_text(size = 18))
# Figure 3:
bw_comparison_tbl |>
filter(n == 400) |>
ggplot() +
geom_line(aes(x = h, y = sup.err, col = p, linetype = p), size = .6) +
ylim(c(0.02, 0.52)) +
theme(text = element_text(size = 18)) +
labs(title = "n = 400")
bw_comparison_tbl |>
filter(n == 400) |>
ggplot() +
geom_point(aes(x = h, y = sup.err, col = p, pch = p)) +
ylim(c(0.02, 0.52)) +
labs(title = "n = 400")
bw_comparison_tbl |>
filter(n == 100, p == 75) |>
ggplot() +
geom_line(aes(x = h, y = sup.err, linetype = p)) +
ylim(c(0, 0.9))
min_h_tibble = bw_comparison_tbl |>
group_by(n, p) |>
slice_min(sup.err)
bw_comparison_tbl |>
filter(n == 100) |>
ggplot( ) +
geom_line(aes(x = h, y = sup.err, col = p, linetype = p)) +
ylim(c(0.03, 0.65)) +
labs(title = "n = 100")
# Figure 3:
bw_comparison_tbl |>
filter(n == 400) |>
ggplot() +
geom_line(aes(x = h, y = sup.err, col = p, linetype = p), size = .6) +
ylim(c(0.02, 0.52)) +
theme(text = element_text(size = 18)) +
labs(title = "n = 400")
bw_comparison_tbl |>
filter(n == 400) |>
ggplot() +
geom_point(aes(x = h, y = sup.err, col = p, pch = p)) +
ylim(c(0.02, 0.52)) +
labs(title = "n = 400")
# add: dissertation
bw_comparison_tbl |>
ggplot() +
geom_point(aes(x = h, y = sup.err, col = p, pch = p)) +
ylim(c(0.02, 0.52)) +
facet_wrap(n~.)
# add: dissertation
bw_comparison_tbl |>
ggplot() +
geom_point(aes(x = h, y = sup.err, col = p, pch = p)) +
facet_wrap(n~.)
# add: dissertation
bw_comparison_tbl |>
ggplot() +
geom_point(aes(x = h, y = sup.err, col = p, pch = p)) +
facet_wrap(n~., nrow = 1)
# add: dissertation
bw_comparison_tbl |>
ggplot() +
geom_point(aes(x = h, y = sup.err, col = p, pch = p)) +
ylim = c(0, 1)
# add: dissertation
bw_comparison_tbl |>
ggplot() +
geom_point(aes(x = h, y = sup.err, col = p, pch = p)) +
lims(y = c(0, 1)) +
facet_wrap(n~., nrow = 1)
# add: dissertation
bw_comparison_tbl |>
ggplot() +
geom_point(aes(x = h, y = sup.err, col = p, pch = p)) +
lims(y = c(0, .95)) +
facet_wrap(n~., nrow = 1)
ggsave("Grafics/cov_optimal_bw_various_n.png", device = "png", width = 8, height = 4, units = "in")
##### five fold cv #####
load("data/five_fold_cv_OU.RData")
five_fold_tbl = tibble(h = five_fold_cv %>% unlist(), p = gl(5, 1000, labels = p.seq))
five_fold_tbl %>%
ggplot(aes(y = h, x = p, col = p)) +
geom_boxplot()
five_fold_table = five_fold_tbl %>%
group_by_all() %>%
summarise(n = n()/1000)
# Figure in Appendix
five_fold_table %>%
ggplot(aes(h, n)) +
geom_point(size = 3) +
ylim(c(0, 0.1))+
facet_wrap(.~p) +
ylab(NULL) +
labs(title = "n = 100")
#### Estimator Comparison ####
load("data/estimator_comparison.RData")
to_tibble = function(bw_comp, est = "mir", m = 1, Z = "OU") {
Reduce(rbind, bw_comp) |>
as_tibble() |>
rename(n = V1, p = V2, h = V3, sup.err = V4) |>
mutate(p = as.factor(p),
n = as.factor(n),
estimator = est,
m = m,
Z = Z)
}
est_comp = rbind(OU_m0, OU_m1,
OU_m0_full, OU_m1_full,
OU_m2, OU_m2_full,
rv2_m0, rv2_m1,
rv2_m0_full, rv2_m1_full,
rv2_m2, rv2_m2_full) |>
mutate(estimator = as.factor(estimator),
m = as.factor(m), Z = as.factor(Z))
# Figure 8a
est_comp |>
filter(n == 100, p == 50, Z == "OU") |>
ggplot(aes(x = h, y = sup.err, lty = estimator, col = m)) +
geom_line(size = .6) +
lims(y = c(0.03, 1.2)) +
theme(text = element_text(size = 18)) +
labs(title = "Ornstein-Uhlenbeck", subtitle = "n = 100, p = 50")
# Figure 8b
est_comp |>
filter(n == 100, p == 50, Z == "2rv") |>
ggplot(aes(x = h, y = sup.err, lty = estimator, col = m)) +
geom_line(size = .6) +
lims(y = c(0.03, 1.1))+
theme(text = element_text(size = 18)) +
labs(title = "Process 2", subtitle = "n = 100, p = 50")
# Figure 8a
est_comp |>
filter(n == 100, p == 50, Z == "OU") |>
ggplot(aes(x = h, y = sup.err, lty = estimator, col = m)) +
geom_point() +
lims(y = c(0.03, 1.2)) +
theme(text = element_text(size = 18)) +
labs(title = "Ornstein-Uhlenbeck", subtitle = "n = 100, p = 50")
# Figure 8a
est_comp |>
filter(n == 100, p == 50, Z == "OU") |>
ggplot(aes(x = h, y = sup.err, pch = estimator, col = m)) +
geom_point() +
lims(y = c(0.03, 1.2)) +
theme(text = element_text(size = 18)) +
labs(title = "Ornstein-Uhlenbeck", subtitle = "n = 100, p = 50")
# Figure 8a
est_comp |>
filter(n == 100, p == 50, Z == "OU") |>
ggplot(aes(x = h, y = sup.err, pch = estimator, col = m)) +
geom_point() +
lims(y = c(0.03, 1.2)) +
labs(title = "Ornstein-Uhlenbeck", subtitle = "n = 100, p = 50")
# Figure 8b
est_comp |>
filter(n == 100, p == 50, Z == "2rv") |>
ggplot(aes(x = h, y = sup.err, pch = estimator, col = m)) +
geom_point() +
lims(y = c(0.03, 1.1))+
theme(text = element_text(size = 18)) +
labs(title = "Process 2", subtitle = "n = 100, p = 50")
ggsave("Grafics/est_comp_OU_points.png", device = "png", width = 5, height = 3.8, units = "in")
# Figure 8a
est_comp |>
filter(n == 100, p == 50, Z == "OU") |>
ggplot(aes(x = h, y = sup.err, pch = estimator, col = m)) +
geom_point() +
lims(y = c(0.03, 1.2)) +
labs(title = "Ornstein-Uhlenbeck", subtitle = "n = 100, p = 50")
ggsave("Grafics/est_comp_OU_points.png", device = "png", width = 5, height = 3.8, units = "in")
# Figure 8b
est_comp |>
filter(n == 100, p == 50, Z == "2rv") |>
ggplot(aes(x = h, y = sup.err, pch = estimator, col = m)) +
geom_point() +
lims(y = c(0.03, 1.1))+
labs(title = "Process 2", subtitle = "n = 100, p = 50")
ggsave("Grafics/est_comp_2rv_points.png", device = "png", width = 5, height = 3.8, units = "in")
